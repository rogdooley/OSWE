java:
  extensions:
  - .java
  rules:
  - category: code-execution
    description: Command execution via Runtime.exec
    pattern: Runtime\.getRuntime\(\)\.exec
    severity: high
  - category: code-execution
    description: Command execution via ProcessBuilder
    pattern: ProcessBuilder
    severity: high
  - category: deserialization
    description: Unsafe deserialization with ObjectInputStream
    pattern: ObjectInputStream
    severity: high
  - category: deserialization
    description: Insecure XML deserialization with XMLDecoder
    pattern: XMLDecoder
    severity: high
  - category: deserialization
    description: Insecure XML deserialization with XStream
    pattern: XStream\.fromXML
    severity: high
  - category: code-execution
    description: Code execution via ScriptEngine.eval
    pattern: ScriptEngine\.eval
    severity: high
  - category: sql-injection
    description: SQL injection via Statement execution
    pattern: Statement\.execute(Query|Update)
    severity: high
  - category: sql-injection
    description: SQL injection via parameter concatenation
    pattern: PreparedStatement.*\.set.*\(.*\+
    severity: high
  - category: code-execution
    description: Dynamic class loading (may be dangerous)
    pattern: Class\.forName\(
    severity: medium
  - category: crypto
    description: Insecure cipher mode (ECB)
    pattern: Cipher\.getInstance\(\".*ECB.*\"
    severity: high
  - category: crypto
    description: Weak hash function (MD5)
    pattern: MessageDigest\.getInstance\(\"MD5\"
    severity: high
  - category: crypto
    description: Weak hash function (SHA1)
    pattern: MessageDigest\.getInstance\(\"SHA1\"
    severity: high
  - category: file-io
    description: File read access (check for tainted input)
    pattern: new\s+FileInputStream\(
    severity: medium
  - category: file-io
    description: File write access (check for tainted input)
    pattern: new\s+FileOutputStream\(
    severity: medium
  - category: credential-management
    description: Hardcoded password
    pattern: password\s*=\s*\".*\"
    severity: critical
  - category: input-validation
    description: Unvalidated user input (check usage context)
    pattern: request\.getParameter\(
    severity: medium
  - category: xss
    description: Possible XSS via direct output
    pattern: response\.getWriter\(\)\.write\(.*request\.getParameter\(
    severity: high
  - category: sql-injection
    description: Raw SQL operation detected
    pattern: \b(SELECT|UPDATE|DELETE|INSERT|CREATE|ALTER|DROP)\b
    severity: medium
  - category: sql-injection
    description: Potential SQL injection (WHERE/VALUES + quote)
    pattern: \b(WHERE|VALUES)\b.*?'
    severity: high
  - category: sql-injection
    description: Dynamic SQL string with unsafe concatenation
    pattern: \b(WHERE|VALUES)\b.*?\"\s*\+
    severity: high
  - category: sql-injection
    description: "Dynamic SQL string \u2013 verify sanitization"
    pattern: .*sql.*\"
    severity: info
  - category: sql-injection
    description: "JDBC usage \u2013 verify SQL sanitization"
    pattern: jdbcTemplate
    severity: info
  - category: type-juggling
    description: "Loose equality \u2013 potential type coercion issue"
    pattern: ==\s*[^=]
    severity: medium
python:
  extensions:
  - .py
  rules:
  - category: code-execution
    description: Arbitrary code execution (eval)
    pattern: eval\(
    severity: critical
  - category: code-execution
    description: Arbitrary code execution (exec)
    pattern: exec\(
    severity: critical
  - category: deserialization
    description: Unsafe deserialization with pickle
    pattern: pickle\.load
    severity: high
  - category: deserialization
    description: Unsafe deserialization with marshal
    pattern: marshal\.loads
    severity: high
  - category: code-execution
    description: Command execution via subprocess
    pattern: subprocess\.(Popen|call|run|check_output)
    severity: high
  - category: input-validation
    description: User input without sanitization
    pattern: input\(
    severity: medium
  - category: sql-injection
    description: Database connection (check for string concatenation)
    pattern: sqlite3\.connect\(.*\)
    severity: medium
  - category: sql-injection
    description: Potential SQL injection (dynamic query)
    pattern: cursor\.execute\(.*\+.*\)
    severity: high
  - category: credential-management
    description: Hardcoded password
    pattern: password\s*=\s*[\"'].*[\"']
    severity: critical
  - category: crypto
    description: Weak hash function (MD5)
    pattern: hashlib\.md5
    severity: high
  - category: crypto
    description: Weak hash function (SHA1)
    pattern: hashlib\.sha1
    severity: high
  - category: xss
    description: Potential XSS from unsanitized input in render
    pattern: render\(.+request\.GET\[.+\]
    severity: high
  - category: sql-injection
    description: Raw SQL command in query
    pattern: \b(SELECT|UPDATE|DELETE|INSERT|CREATE|ALTER|DROP)\b
    severity: medium
  - category: sql-injection
    description: SQL statement using string with WHERE/VALUES
    pattern: execute\\(.*[\"'].*(WHERE|VALUES).*?[\"']
    severity: high
  - category: sql-injection
    description: "SQL in f-string \u2013 possible injection"
    pattern: f?[\"'].*(SELECT|UPDATE|DELETE|INSERT).*{.*}.*[\"']
    severity: high
  - category: sql-injection
    description: SQLAlchemy query concatenation
    pattern: session\.execute\(.*\+.*\)
    severity: high
  - category: type-juggling
    description: "Loose equality \u2013 may allow type juggling"
    pattern: ==\s*[^=]
    severity: medium
